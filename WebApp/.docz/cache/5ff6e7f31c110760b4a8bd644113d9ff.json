{"remainingRequest":"C:\\Users\\Kevin\\Desktop\\senior\\git\\WebApp\\node_modules\\thread-loader\\dist\\cjs.js??ref--5-1!C:\\Users\\Kevin\\Desktop\\senior\\git\\WebApp\\node_modules\\babel-loader\\lib\\index.js??ref--5-2!C:\\Users\\Kevin\\Desktop\\senior\\git\\WebApp\\node_modules\\source-map-loader\\index.js!C:\\Users\\Kevin\\Desktop\\senior\\git\\WebApp\\react-app\\src\\modules\\Dashboard.js","dependencies":[{"path":"C:\\Users\\Kevin\\Desktop\\senior\\git\\WebApp\\react-app\\src\\modules\\Dashboard.js","mtime":1557007156397},{"path":"C:\\Users\\Kevin\\Desktop\\senior\\git\\WebApp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Kevin\\Desktop\\senior\\git\\WebApp\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Kevin\\Desktop\\senior\\git\\WebApp\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Kevin\\Desktop\\senior\\git\\WebApp\\node_modules\\source-map-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\Users\\Kevin\\Desktop\\senior\\git\\WebApp\\react-app\\src\\modules\\Dashboard.js"],"names":["React","Component","MDBBtn","MDBCard","MDBCardBody","MDBCardImage","MDBCardTitle","MDBCardText","MDBCol","MDBContainer","MDBRow","t","Dashboard","props","state","didLoad","text","load","interval","setInterval","fetch","then","res","json","result","setState","clearInterval","width","propTypes","stateVariables","oneOf","methods"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol, MDBContainer, MDBRow } from 'mdbreact';\r\nimport t from 'prop-types';\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props){\r\n    super(props)\r\n  this.state = {didLoad: false};\r\n  }\r\n\r\n  state = {\r\n    didLoad: false,\r\n    text: \"\",\r\n    load: <div class=\"spinner-grow\" role=\"status\">\r\n            <span class=\"sr-only\"></span>\r\n          </div>\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.interval = setInterval(() =>\r\n      fetch('http://localhost:3001/api')\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              this.setState({\r\n                didLoad: true,\r\n                load: \"\",\r\n                text: result.text,\r\n                });\r\n              }\r\n          ),2000);\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"cards\" data-test=\"dashboard\"> \r\n          <MDBContainer>\r\n            <MDBRow>\r\n            <MDBCol md=\"6\">\r\n              <MDBCard style={{ width: \"22rem\" }}>\r\n                <MDBCardImage className=\"img-fluid\" src=\"https://proxy.duckduckgo.com/iu/?u=https%3A%2F%2Fwww.zuehlke.com%2Fblog%2Fapp%2Fuploads%2F2016%2F07%2FCircuit-board-picture-.jpg&f=1\" waves />\r\n                <MDBCardBody>\r\n                  <MDBCardTitle>User's Pi</MDBCardTitle>\r\n                  <MDBCardText>\r\n                    {this.state.load}                   \r\n                    {this.state.text}\r\n                  </MDBCardText>\r\n                  <MDBBtn href=\"#\">More Info</MDBBtn>\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n            </MDBCol>\r\n            <MDBCol md=\"6\">\r\n            <ul class=\"list-group\">\r\n              <li class=\"list-group-item active\">Components</li>\r\n              <li class=\"list-group-item\">GPS: Inactive</li>\r\n              <li class=\"list-group-item\">Motion Sensor: Active</li>\r\n              <li class=\"list-group-item\">Camera: Inactive</li>\r\n            </ul>\r\n            </MDBCol>\r\n            </MDBRow>\r\n          </MDBContainer>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  stateVariables: t.oneOf(['didLoad', 'text', 'load']),\r\n  methods: t.oneOf(['componentDidMount', 'componentWillUnmount'])\r\n}\r\n\r\nexport default Dashboard;\r\n"]}]}