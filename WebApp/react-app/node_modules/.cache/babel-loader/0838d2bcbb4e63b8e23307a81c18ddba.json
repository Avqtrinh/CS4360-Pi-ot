{"ast":null,"code":"var Collection = require('./collection');\n\nvar Operation = require('./operation');\n\nvar Shape = require('./shape');\n\nvar Paginator = require('./paginator');\n\nvar ResourceWaiter = require('./resource_waiter');\n\nvar util = require('../util');\n\nvar property = util.property;\nvar memoizedProperty = util.memoizedProperty;\n\nfunction Api(api, options) {\n  api = api || {};\n  options = options || {};\n  options.api = this;\n  api.metadata = api.metadata || {};\n  property(this, 'isApi', true, false);\n  property(this, 'apiVersion', api.metadata.apiVersion);\n  property(this, 'endpointPrefix', api.metadata.endpointPrefix);\n  property(this, 'signingName', api.metadata.signingName);\n  property(this, 'globalEndpoint', api.metadata.globalEndpoint);\n  property(this, 'signatureVersion', api.metadata.signatureVersion);\n  property(this, 'jsonVersion', api.metadata.jsonVersion);\n  property(this, 'targetPrefix', api.metadata.targetPrefix);\n  property(this, 'protocol', api.metadata.protocol);\n  property(this, 'timestampFormat', api.metadata.timestampFormat);\n  property(this, 'xmlNamespaceUri', api.metadata.xmlNamespace);\n  property(this, 'abbreviation', api.metadata.serviceAbbreviation);\n  property(this, 'fullName', api.metadata.serviceFullName);\n  property(this, 'serviceId', api.metadata.serviceId);\n  memoizedProperty(this, 'className', function () {\n    var name = api.metadata.serviceAbbreviation || api.metadata.serviceFullName;\n    if (!name) return null;\n    name = name.replace(/^Amazon|AWS\\s*|\\(.*|\\s+|\\W+/g, '');\n    if (name === 'ElasticLoadBalancing') name = 'ELB';\n    return name;\n  });\n  property(this, 'operations', new Collection(api.operations, options, function (name, operation) {\n    return new Operation(name, operation, options);\n  }, util.string.lowerFirst));\n  property(this, 'shapes', new Collection(api.shapes, options, function (name, shape) {\n    return Shape.create(shape, options);\n  }));\n  property(this, 'paginators', new Collection(api.paginators, options, function (name, paginator) {\n    return new Paginator(name, paginator, options);\n  }));\n  property(this, 'waiters', new Collection(api.waiters, options, function (name, waiter) {\n    return new ResourceWaiter(name, waiter, options);\n  }, util.string.lowerFirst));\n\n  if (options.documentation) {\n    property(this, 'documentation', api.documentation);\n    property(this, 'documentationUrl', api.documentationUrl);\n  }\n}\n/**\n * @api private\n */\n\n\nmodule.exports = Api;","map":null,"metadata":{},"sourceType":"script"}