{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar dom_utils_1 = require(\"../vendor/dom-utils\");\n\nvar core_1 = require(\"@aws-amplify/core\");\n\nvar logger = new core_1.ConsoleLogger('EventTracker');\nvar defaultOpts = {\n  enable: false,\n  events: ['click'],\n  selectorPrefix: 'data-amplify-analytics-',\n  provider: 'AWSPinpoint'\n};\n\nvar EventTracker =\n/** @class */\nfunction () {\n  function EventTracker(tracker, opts) {\n    if (!core_1.JS.browserOrNode().isBrowser || !window.addEventListener) {\n      logger.debug('not in the supported web environment');\n      return;\n    }\n\n    this._config = Object.assign({}, defaultOpts, opts);\n    this._tracker = tracker;\n    this._delegates = {};\n    this._trackFunc = this._trackFunc.bind(this);\n    logger.debug('initialize pageview tracker with opts', this._config);\n    this.configure(this._config);\n  }\n\n  EventTracker.prototype.configure = function (opts) {\n    var _this = this;\n\n    Object.assign(this._config, opts);\n\n    if (!this._config.enable) {\n      Object.keys(this._delegates).forEach(function (key) {\n        if (typeof _this._delegates[key].destroy === 'function') _this._delegates[key].destroy();\n      });\n      this._delegates = {};\n    } else if (this._config.enable && Object.keys(this._delegates).length === 0) {\n      var selector_1 = '[' + this._config.selectorPrefix + 'on]';\n\n      this._config.events.forEach(function (evt) {\n        _this._delegates[evt] = dom_utils_1.delegate(document, evt, selector_1, _this._trackFunc, {\n          composed: true,\n          useCapture: true\n        });\n      });\n    }\n\n    return this._config;\n  };\n\n  EventTracker.prototype._trackFunc = function (event, element) {\n    return __awaiter(this, void 0, void 0, function () {\n      var customAttrs, events, eventName, attrs, defaultAttrs, _a, attributes;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            customAttrs = {};\n            events = element.getAttribute(this._config.selectorPrefix + 'on').split(/\\s*,\\s*/);\n            eventName = element.getAttribute(this._config.selectorPrefix + 'name');\n            attrs = element.getAttribute(this._config.selectorPrefix + 'attrs');\n\n            if (attrs) {\n              attrs.split(/\\s*,\\s*/).forEach(function (attr) {\n                var tmp = attr.trim().split(/\\s*:\\s*/);\n                customAttrs[tmp[0]] = tmp[1];\n              });\n            }\n\n            if (!(typeof this._config.attributes === 'function')) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this._config.attributes()];\n\n          case 1:\n            _a = _b.sent();\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            _a = this._config.attributes;\n            _b.label = 3;\n\n          case 3:\n            defaultAttrs = _a;\n            attributes = Object.assign({\n              type: event.type,\n              target: event.target.localName + \" with id \" + event.target.id\n            }, defaultAttrs, customAttrs);\n            logger.debug('events needed to be recorded', events);\n            logger.debug('attributes needed to be attached', customAttrs);\n\n            if (events.indexOf(event.type) < 0) {\n              logger.debug(\"event \" + event.type + \" is not selected to be recorded\");\n              return [2\n              /*return*/\n              ];\n            }\n\n            this._tracker({\n              name: eventName || 'event',\n              attributes: attributes\n            }, this._config.provider).catch(function (e) {\n              logger.debug(\"Failed to record the \" + event.type + \" event', \" + e);\n            });\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  return EventTracker;\n}();\n\nexports.default = EventTracker;","map":null,"metadata":{},"sourceType":"script"}