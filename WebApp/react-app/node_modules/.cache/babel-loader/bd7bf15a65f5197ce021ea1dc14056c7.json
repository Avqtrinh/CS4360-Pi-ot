{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\Kevin\\\\Desktop\\\\senior\\\\git\\\\WebApp\\\\react-app\\\\node_modules\\\\docz-core\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\Kevin\\\\Desktop\\\\senior\\\\git\\\\WebApp\\\\react-app\\\\src\\\\modules\\\\Routes.mdx\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\n/* @jsx mdx */\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport { Props } from 'docz';\nimport Routes from './Routes';\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }));\n  };\n};\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nexport default function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, Object.assign({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), mdx(\"h1\", Object.assign({\n    \"id\": \"routesjs\"\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), \"Routes.js\"), mdx(\"h2\", Object.assign({\n    \"id\": \"properties\"\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), \"Properties\"), mdx(\"h2\", Object.assign({\n    \"id\": \"method-descriptions\"\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), \"Method Descriptions\"), mdx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"isAuthenticated()\"), mdx(\"blockquote\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, mdx(\"p\", {\n    parentName: \"blockquote\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Included from react-router-dom, this method is used in junction to\\ncheck from child props to see if the current user is authenticated to\\nview the protected pages. \")), mdx(\"h2\", Object.assign({\n    \"id\": \"notes\"\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), \"Notes\"), mdx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Unprotected pages:\"), mdx(\"blockquote\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, mdx(\"p\", {\n    parentName: \"blockquote\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"/login /signup /signout\")), mdx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Protected pages:\"), mdx(\"blockquote\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, mdx(\"p\", {\n    parentName: \"blockquote\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"/dashboard /stats /log\")));\n}\n\nif (typeof MDXContent !== 'undefined' && MDXContent && MDXContent === Object(MDXContent) && Object.isExtensible(MDXContent)) {\n  Object.defineProperty(MDXContent, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"MDXContent\",\n      filename: \"src\\\\modules\\\\Routes.mdx\"\n    }\n  });\n}\n\nMDXContent.isMDXComponent = true;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(makeShortcode, \"makeShortcode\", \"C:\\\\Users\\\\Kevin\\\\Desktop\\\\senior\\\\git\\\\WebApp\\\\react-app\\\\src\\\\modules\\\\Routes.mdx\");\n  reactHotLoader.register(layoutProps, \"layoutProps\", \"C:\\\\Users\\\\Kevin\\\\Desktop\\\\senior\\\\git\\\\WebApp\\\\react-app\\\\src\\\\modules\\\\Routes.mdx\");\n  reactHotLoader.register(MDXLayout, \"MDXLayout\", \"C:\\\\Users\\\\Kevin\\\\Desktop\\\\senior\\\\git\\\\WebApp\\\\react-app\\\\src\\\\modules\\\\Routes.mdx\");\n  reactHotLoader.register(MDXContent, \"MDXContent\", \"C:\\\\Users\\\\Kevin\\\\Desktop\\\\senior\\\\git\\\\WebApp\\\\react-app\\\\src\\\\modules\\\\Routes.mdx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["C:\\Users\\Kevin\\Desktop\\senior\\git\\WebApp\\react-app\\src\\modules\\Routes.mdx"],"names":["React","mdx","Props","Routes","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":";;;;;;;;AAAA;AACE,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,eAApB;AACA;;AACF,SAASC,KAAT,QAAsB,MAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,IAAI;AAAA,SAAI,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAChEC,IAAAA,OAAO,CAACC,IAAR,CAAa,eAAeJ,IAAf,GAAsB,yEAAnC;AACA,WAAO,6BAASE,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAHyB;AAAA,CAA1B;;AAKA,IAAMG,WAAW,GAAG,EAApB;AAGA,IAAMC,SAAS,GAAG,SAAlB;AACA,eAAe,SAASC,UAAT,OAGZ;AAAA,MAFDC,UAEC,QAFDA,UAEC;AAAA,MADEN,KACF;;AACD,SAAO,IAAC,SAAD,oBAAeG,WAAf,EAAgCH,KAAhC;AAAuC,IAAA,UAAU,EAAEM,UAAnD;AAA+D,IAAA,OAAO,EAAC,WAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFK,EAKL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALK,EAQL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BARK,EAWL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAXK,EAYL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,UAAU,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6KADF,CAZK,EAiBL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBK,EAoBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BApBK,EAqBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,UAAU,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,CArBK,EAwBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAxBK,EAyBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,UAAU,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,CAzBK,CAAP;AA6BD;;;;;;;;;;;;;AAEDD,UAAU,CAACE,cAAX,GAA4B,IAA5B;;;;;;;;;;0BA5CMV,a;0BAKAM,W;0BAGAC,S;0BACkBC,U","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Props } from 'docz'\nimport Routes from './Routes'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"routesjs\"\n    }}>{`Routes.js`}</h1>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <h2 {...{\n      \"id\": \"method-descriptions\"\n    }}>{`Method Descriptions`}</h2>\n    <p>{`isAuthenticated()`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Included from react-router-dom, this method is used in junction to\ncheck from child props to see if the current user is authenticated to\nview the protected pages. `}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"notes\"\n    }}>{`Notes`}</h2>\n    <p>{`Unprotected pages:`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`/login /signup /signout`}</p>\n    </blockquote>\n    <p>{`Protected pages:`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`/dashboard /stats /log`}</p>\n    </blockquote>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]},"metadata":{},"sourceType":"module"}