'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /**
                                                                                                                                                                                                                                                                   * This source code is licensed under the MIT-style license found in the
                                                                                                                                                                                                                                                                   * LICENSE file in the root directory of this source tree. *
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * @providesModule toHaveStyleAssertion
                                                                                                                                                                                                                                                                   * 
                                                                                                                                                                                                                                                                   */

var _name = require('../utils/name');

var _name2 = _interopRequireDefault(_name);

var _stringify3 = require('../utils/stringify');

var _stringify4 = _interopRequireDefault(_stringify3);

var _reduceAssertionObject = require('../utils/reduceAssertionObject');

var _reduceAssertionObject2 = _interopRequireDefault(_reduceAssertionObject);

var _html = require('../utils/html');

var _html2 = _interopRequireDefault(_html);

var _single = require('../utils/single');

var _single2 = _interopRequireDefault(_single);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function flattenStyle(style) {
  if (!style) {
    return undefined;
  }

  if (!Array.isArray(style)) {
    return style;
  }

  return style.reduce(function (computedStyle, currentStyle) {
    return _extends({}, computedStyle, flattenStyle(currentStyle));
  }, undefined);
}

function toHaveStyle(enzymeWrapper, styleKey, styleValue) {
  var style = flattenStyle(enzymeWrapper.prop('style'));
  var wrapperName = (0, _name2.default)(enzymeWrapper);

  // 1. If the component doesn't have a style prop in general. That's an immediate failure.
  if (!style) {
    return {
      pass: false,
      message: 'Expected <' + wrapperName + '> component to have a style prop but it did not.',
      negatedMessage: 'Expected <' + wrapperName + '> component not to have a style prop but it did.',
      contextualInformation: {
        actual: (0, _html2.default)(enzymeWrapper)
      }
    };
  }

  // 2. If the assertion is to check if the component has a style in general. We need to make sure
  // that its not an object and intended for the object assertion API.
  // Then we have to make sure the style has that key.
  if (styleKey === undefined && arguments.length === 2 && (typeof styleKey === 'undefined' ? 'undefined' : _typeof(styleKey)) !== 'object' && Array.isArray(styleKey) === false) {
    return {
      pass: style.hasOwnProperty(styleKey),
      message: 'Expected <' + wrapperName + '> to have any value for the prop "' + styleKey + '"',
      negatedMessage: 'Expected <' + wrapperName + '> not to receive the prop "' + styleKey + '"',
      contextualInformation: {
        actual: 'Actual props: ' + (0, _stringify4.default)(_defineProperty({}, styleKey, style[styleKey])),
        expected: 'Expected props: ' + (0, _stringify4.default)(_defineProperty({}, styleKey, styleValue))
      }
    };
  }

  var results = _reduceAssertionObject2.default.call(this, style, styleKey, styleValue);
  var unmatchedKeys = results.unmatchedKeys.join(', ');
  var contextualInformation = {
    actual: 'Actual style: ' + (0, _stringify4.default)(results.actual),
    expected: 'Expected style: ' + (0, _stringify4.default)(results.expected)
  };

  if (results.missingKeys.length) {
    var missingKeys = results.missingKeys.join(', ');
    return {
      pass: false,
      message: 'Expected <' + wrapperName + '> component to have a style keys of "' + missingKeys + '" but it did not.',
      negatedMessage: 'Expected <' + wrapperName + '> component not to have a style key of "' + missingKeys + '" but it did.',
      contextualInformation: {
        actual: (0, _html2.default)(enzymeWrapper)
      }
    };
  }

  return {
    pass: results.pass,
    message: 'Expected <' + wrapperName + '> component style values to match for key "' + unmatchedKeys + '", but they didn\'t',
    negatedMessage: 'Expected <' + wrapperName + '> component style values to be different for key "' + unmatchedKeys + '", but they weren\'t',
    contextualInformation: contextualInformation
  };
}

exports.default = (0, _single2.default)(toHaveStyle);
module.exports = exports['default'];